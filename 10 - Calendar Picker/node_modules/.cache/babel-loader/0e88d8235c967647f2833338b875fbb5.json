{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\VSCProjects\\\\Learn React\\\\20-react-apps\\\\10 - Calendar Picker\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nconst calendarDates = Array(31).fill(0).map((e, i) => i);\nexport default function App() {\n  const [choosingType, setChoosingType] = useState('start');\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  const updateDate = choosenDay => {\n    if (choosingType === 'start') setStartDate(choosenDay);\n    setChoosingType('end');\n    if (choosingType === 'end') setEndDate(choosenDay);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-chooser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"date-chooser-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Start Date \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }\n  }, startDate)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"date-chooser-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"End Date \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }, endDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, calendarDates.map((day, index) => {\n    const dayNumber = day + 1;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      onClick: () => updateDate(dayNumber),\n      className: \"calendar-day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, dayNumber);\n  })));\n}","map":{"version":3,"sources":["D:/IT/VSCProjects/Learn React/20-react-apps/10 - Calendar Picker/src/App.js"],"names":["React","useState","calendarDates","Array","fill","map","e","i","App","choosingType","setChoosingType","startDate","setStartDate","endDate","setEndDate","updateDate","choosenDay","day","index","dayNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,MAAMC,aAAa,GAAGC,KAAK,CAAC,EAAD,CAAL,CACnBC,IADmB,CACd,CADc,EAEnBC,GAFmB,CAEf,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAFK,CAAtB;AAIA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCT,QAAQ,CAAC,OAAD,CAA/C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMc,UAAU,GAAIC,UAAD,IAAgB;AACjC,QAAGP,YAAY,KAAG,OAAlB,EACAG,YAAY,CAACI,UAAD,CAAZ;AACAN,IAAAA,eAAe,CAAC,KAAD,CAAf;AACA,QAAGD,YAAY,KAAI,KAAnB,EACAK,UAAU,CAACE,UAAD,CAAV;AAED,GAPD;;AASA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,SAAP,CADb,CADF,eAIE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,OAAP,CADX,CAJF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,aAAa,CAACG,GAAd,CAAkB,CAACY,GAAD,EAAMC,KAAN,KAAgB;AACjC,UAAMC,SAAS,GAAGF,GAAG,GAAG,CAAxB;AACA,wBACE;AAAQ,MAAA,GAAG,EAAEC,KAAb;AAAoB,MAAA,OAAO,EAAE,MAAMH,UAAU,CAACI,SAAD,CAA7C;AAA0D,MAAA,SAAS,EAAC,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,SADH,CADF;AAKD,GAPA,CADH,CAVF,CADF;AAuBD","sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css'\r\n\r\nconst calendarDates = Array(31)\r\n  .fill(0)\r\n  .map((e, i) => i)\r\n\r\nexport default function App() {\r\n  const [choosingType, setChoosingType] =useState('start')\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const updateDate = (choosenDay) => {\r\n    if(choosingType==='start')\r\n    setStartDate(choosenDay)\r\n    setChoosingType('end')\r\n    if(choosingType ==='end')\r\n    setEndDate(choosenDay)\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='date-chooser'>\r\n        <button className='date-chooser-button'>\r\n          Start Date <span>{startDate}</span>\r\n        </button>\r\n        <button className='date-chooser-button'>\r\n          End Date <span>{endDate}</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className='calendar'>\r\n        {calendarDates.map((day, index) => {\r\n          const dayNumber = day + 1\r\n          return (\r\n            <button key={index} onClick={() => updateDate(dayNumber)} className='calendar-day'>\r\n              {dayNumber}\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}