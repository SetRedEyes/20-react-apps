{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT\\\\VSCProjects\\\\Learn React\\\\20-react-apps\\\\10 - Calendar Picker\\\\src\\\\components\\\\StyledDateChooser.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nexport const DateChooser = ({\n  choosingType,\n  setChoosingType,\n  startDate,\n  endDate\n}) => /*#__PURE__*/React.createElement(StyledDateChooser, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(StyledDateChooserButton, {\n  onClick: () => setChoosingType('start'),\n  isChoosing: choosingType === 'start',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }\n}, \"Start Date \", /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 20\n  }\n}, startDate)), /*#__PURE__*/React.createElement(StyledDateChooserButton, {\n  onClick: () => setChoosingType('end'),\n  isChoosing: choosingType === 'end',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, \"End Date \", /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 18\n  }\n}, endDate)));\nconst StyledDateChooser = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\nconst StyledDateChooserButton = styled.button`\n  color: #0b204c;\n  text-transform: uppercase;\n  flex: 1;\n  padding: 15px;\n  background: none;\n  cursor: pointer;\n  border: none;\n  border-bottom: 2px solid rgba(11, 32, 76, 0.2);\n  outline: none;\n  border-color: ${props => props.isChoosing ? `#0b204c` : 'none'};\n\n  span {\n    display: block;\n    min-height: 60px;\n    font-size: 50px;\n  }\n`;","map":{"version":3,"sources":["D:/IT/VSCProjects/Learn React/20-react-apps/10 - Calendar Picker/src/components/StyledDateChooser.js"],"names":["React","styled","DateChooser","choosingType","setChoosingType","startDate","endDate","StyledDateChooser","div","StyledDateChooserButton","button","props","isChoosing"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;AAEA,OAAO,MAAMC,WAAW,GAAC,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,eAAhB;AAAiCC,EAAAA,SAAjC;AAA4CC,EAAAA;AAA5C,CAAD,kBACrB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,uBAAD;AACE,EAAA,OAAO,EAAE,MAAMF,eAAe,CAAC,OAAD,CADhC;AAEE,EAAA,UAAU,EAAED,YAAY,KAAK,OAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAIa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOE,SAAP,CAJb,CADF,eAOE,oBAAC,uBAAD;AACE,EAAA,OAAO,EAAE,MAAMD,eAAe,CAAC,KAAD,CADhC;AAEE,EAAA,UAAU,EAAED,YAAY,KAAK,KAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAIW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOG,OAAP,CAJX,CAPF,CADG;AAkBP,MAAMC,iBAAiB,GAAGN,MAAM,CAACO,GAAI;;;CAArC;AAMA,MAAMC,uBAAuB,GAAGR,MAAM,CAACS,MAAO;;;;;;;;;;kBAU3BC,KAAD,IAAYA,KAAK,CAACC,UAAN,GAAoB,SAApB,GAA+B,MAAQ;;;;;;;CAVrE","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport './App.css'\r\n\r\nexport const DateChooser=({ choosingType, setChoosingType, startDate, endDate }) => (\r\n    <StyledDateChooser>\r\n      <StyledDateChooserButton\r\n        onClick={() => setChoosingType('start')}\r\n        isChoosing={choosingType === 'start'}\r\n      >\r\n        Start Date <span>{startDate}</span>\r\n      </StyledDateChooserButton>\r\n      <StyledDateChooserButton\r\n        onClick={() => setChoosingType('end')}\r\n        isChoosing={choosingType === 'end'}\r\n      >\r\n        End Date <span>{endDate}</span>\r\n      </StyledDateChooserButton>\r\n    </StyledDateChooser>\r\n  )\r\n\r\n\r\nconst StyledDateChooser = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n`\r\n\r\n\r\nconst StyledDateChooserButton = styled.button`\r\n  color: #0b204c;\r\n  text-transform: uppercase;\r\n  flex: 1;\r\n  padding: 15px;\r\n  background: none;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-bottom: 2px solid rgba(11, 32, 76, 0.2);\r\n  outline: none;\r\n  border-color: ${(props) => (props.isChoosing ? `#0b204c` : 'none')};\r\n\r\n  span {\r\n    display: block;\r\n    min-height: 60px;\r\n    font-size: 50px;\r\n  }\r\n`\r\n\r\n"]},"metadata":{},"sourceType":"module"}